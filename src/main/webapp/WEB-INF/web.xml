<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="WebApp_ID" version="2.5">
    
    <display-name>Archetype Created Web Application</display-name>

    <!-- 读取spring,mybatis配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	classpath:applicationContext*.xml
        </param-value>
    </context-param>
    <!-- 日志记录 -->
    <context-param>
        <!-- 日志配置文件路径 -->
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <!-- Spring字符集过滤器 -->
    <filter>
        <filter-name>SpringEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>SpringEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 验证码框架 -->
    <servlet>  
	    <servlet-name>Kaptcha</servlet-name>  
	    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>  
	    <!-- 是否有边框-->
         <init-param>
             <param-name>kaptcha.border</param-name>
             <param-value>no</param-value>
         </init-param>    
         <!-- 字体颜色 -->
         <init-param>
             <param-name>kaptcha.textproducer.font.color</param-name>
             <param-value>red</param-value>
         </init-param>
         <!-- 图片宽度 -->
         <init-param>
             <param-name>kaptcha.image.width</param-name>
             <param-value>135</param-value>
         </init-param>
         <!-- 图片高度 -->
         <init-param>
             <param-name>kaptcha.image.height</param-name>
             <param-value>50</param-value>
         </init-param>
         <!-- 使用哪些字符生成验证码 -->
         <init-param>
             <param-name>kaptcha.textproducer.char.string</param-name>
             <param-value>ACDEFHKPRSTWX345679</param-value>
         </init-param>
         <!-- 字符个数 -->
         <init-param>
             <param-name>kaptcha.textproducer.char.length</param-name>
             <param-value>4</param-value>
         </init-param>
         <!-- 字体大小 -->
         <init-param>
             <param-name>kaptcha.textproducer.font.size</param-name>
             <param-value>43</param-value>
         </init-param>
         <!-- 干扰线的颜色 -->
         <init-param>
             <param-name>kaptcha.noise.color</param-name>
             <param-value>black</param-value>
         </init-param>
         <!-- 背景渐变开始颜色-->
         <init-param>
             <param-name>kaptcha.background.clear.from</param-name>
             <param-value>white</param-value>
         </init-param>
         <!-- 背景渐变结束颜色-->
         <init-param>
             <param-name>kaptcha.background.clear.to</param-name>
             <param-value>blue</param-value>
         </init-param>
         <!-- 图片样式  WaterRipple 水纹，FishEyeGimpy 鱼眼，ShadowGimpy 阴影-->
         <init-param>
             <param-name>kaptcha.obscurificator.impl</param-name>
             <param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
         </init-param>
         <!-- 使用哪些字体 -->
         <init-param>
             <param-name>kaptcha.textproducer.font.names</param-name>
             <param-value>Arial</param-value>
         </init-param>        
    </servlet>  
    <servlet-mapping>  
	    <servlet-name>Kaptcha</servlet-name>  
	    <url-pattern>/Kaptcha.jpg</url-pattern>  
  	</servlet-mapping>   
    <!-- 加载spring监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
    <!-- 加载Log4j监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->  
    <!-- 这里filter-name必须对应applicationContext.xml中定义的<bean id="shiroFilter"/> -->  
    <!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤,如果设置为[/]则返回的视图也会被拦截 -->  
    <!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->  
    <filter>  
        <filter-name>shiroFilter</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
        <init-param>  
            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理  --> 
            <param-name>targetFilterLifecycle</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>shiroFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <!-- springMVC核心配置 -->
    <servlet>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- 错误跳转页面 -->
    <error-page>
        <!-- 请求错误 -->
        <error-code>400</error-code>
        <location>/WEB-INF/errorpage/400.jsp</location>
    </error-page>
    <error-page>
        <!-- 没有找到请求页面 -->
        <error-code>404</error-code>
        <location>/WEB-INF/errorpage/404.jsp</location>
    </error-page>
    <error-page>
        <!-- 网关错误 -->
        <error-code>502</error-code>
        <location>/WEB-INF/errorpage/502.jsp</location>
    </error-page>
</web-app>
