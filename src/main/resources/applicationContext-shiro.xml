<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">  

	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象  --> 
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>  
	<!-- 自定义Realm类  -->  
	<bean id="lyaoRealm" class="com.lyao.security.LyaoRealm">  
	    <!-- <property name="userService" ref="userImpl"></property> -->
	</bean>
	<!-- 缓存管理 -->  
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>
	<!-- Shiro安全管理器 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	    <property name="realm" ref="lyaoRealm"></property>  
	</bean>  
	<!-- 自定义表单拦截器实现检测验证码的功能 -->
	<bean id="captchaFormAuthenticationFilter" class="com.lyao.security.CaptchaFormAuthenticationFilter"></bean>
	<!--   
	   Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行  
	   Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持   
	-->  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口，这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"></property>  
	    <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
	    <property name="loginUrl" value="/login"></property>  
	    <!-- 登录成功后要跳转的连接 -->  
	    <property name="successUrl" value="/index" ></property>  
	    <!-- 用户访问未对其授权的资源时，所显示的连接。此时用户必须登录后才起作用，未登录的(即未进行身份验证的则跳转到登录界面) -->  
	    <property name="unauthorizedUrl" value="/login"></property> 
	    <property name="filters">
            <map>
                <entry key="authc" value-ref="captchaFormAuthenticationFilter"/>
                <!-- <entry key="">  
                    <bean class="" />  
                </entry>   -->
            </map>
        </property> 
	    <property name="filterChainDefinitions">  
	        <value>
	            /Kaptcha.jpg=anon
	            /static/**=anon
	            /login=authc
	            /**=user
	        </value>  
	    </property>  
	</bean>  
	
	<!--   
	   开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，  
	   并在必要时进行安全逻辑验证  
	-->  
	 
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"></bean>  
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
	    <property name="securityManager" ref="securityManager"></property>  
	</bean>  
	  
</beans>  